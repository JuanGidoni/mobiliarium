name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  deployments: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Bump version (patch)
        run: |
          npm version patch --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json package-lock.json
          git commit -m "chore: bump version to $VERSION"

      - name: Install git-cliff
        uses: taiki-e/install-action@v2
        with:
          tool: git-cliff@2.7.0

      - name: Generate changelog
        run: |
          git-cliff -o CHANGELOG.md
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: Create a temporary branch for changes
        run: |
          git fetch origin
          git checkout -b version-bump-branch
          git pull origin version-bump-branch --no-rebase  # Merge remote changes
          git push origin version-bump-branch

      - name: Create a Pull Request to main
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version to v$VERSION"
          title: "Bump version to v$VERSION"
          body: "This PR bumps the version and updates the changelog for v$VERSION."
          base: main
          branch: version-bump-branch

      - name: Build the project
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4

      - name: Mark Deployment as Finished
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/deployments/${{ steps.deploy.outputs.deployment_id }}/statuses \
            -d '{"state": "success", "environment_url": "https://juangidoni.github.io/mobiliarium", "description": "Deployment to GitHub Pages completed successfully."}'

      - name: Cleanup
        run: rm -rf dist

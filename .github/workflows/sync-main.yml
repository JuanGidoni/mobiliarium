name: Sync main to develop and Monitor Conflicts

on:
  push:
    branches:
      - main

jobs:
  sync-main-to-develop:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main and develop
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch main and develop branches
        run: |
          git fetch origin main
          git fetch origin develop

      - name: Create a new branch for syncing main to develop
        run: |
          git checkout develop
          git pull origin develop
          git checkout -b sync-main-to-develop

      - name: Merge main into the sync branch
        run: |
          git merge origin/main --no-ff --no-commit
          if ! git diff --cached --quiet; then
            git commit -m "Sync main into develop"
            git push origin sync-main-to-develop
          else
            echo "No changes to commit. Skipping merge."

      - name: Create PR to develop
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Sync main to develop"
          body: "Este PR sincroniza los cambios más recientes de `main` con `develop`."
          base: develop
          head: sync-main-to-develop

      - name: Check for merge conflicts in the PR
        id: check_conflicts
        run: |
          pr_url="https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.create_pr.outputs.number }}"
          pr_data=$(curl -s $pr_url)
          if echo "$pr_data" | grep -q '"mergeable": false'; then
            echo "conflict=true" >> $GITHUB_ENV
          else
            echo "conflict=false" >> $GITHUB_ENV

      - name: Comment if there are merge conflicts
        if: env.conflict == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ steps.create_pr.outputs.number }}
          body: "⚠️ Existen conflictos entre `main` y `develop`. Resuélvelos manualmente."

      - name: Merge PR automatically if no conflicts
        if: env.conflict == 'false'
        uses: peter-evans/approve-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create_pr.outputs.number }}

      - name: Merge PR to develop after approval
        if: env.conflict == 'false'
        run: |
          pr_number=${{ steps.create_pr.outputs.number }}
          pr_url="https://api.github.com/repos/${{ github.repository }}/pulls/${pr_number}/merge"
          curl -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"commit_title": "Merge main into develop"}' $pr_url
